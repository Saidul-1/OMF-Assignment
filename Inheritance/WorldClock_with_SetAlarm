/*
Add an alarm feature to the Clock class. When setAlarm(hours,
minutes) is called, the clock stores the alarm. When you call getTime, and the alarm
time has been reached or exceeded, return the time followed by the string "Alarm" (or,
if you prefer, the string "\u23F0") and clear the alarm. What do you need to do to
make the setAlarm method work for WorldClock objects?
*/

/*Clock Class*/
public class Clock {
    private int hour;
    private int minute;
    private int alarmHour;
    private int alarmMinute;
    private String time = java.time.Instant.now().toString();
    public int getHour() {
        return Integer.parseInt(time.substring(11,13));
    }
    public int getMinute(){
        return Integer.parseInt(time.substring(14,16));
    }
    public String getTime(){
        if((alarmHour*60 + alarmMinute)<= (hour*60 + minute))
            return "Alarm " + getHour()+":"+getMinute();
        return getHour()+":"+getMinute();
    }
    public void setAlarm(int hour, int minute){
        alarmHour = hour;
        alarmMinute = minute;
    }
}

/* WorldClock class */
public class WorldClock extends Clock{
    private int offset;
    public WorldClock(int offset) {
        this.offset = offset;
    }
    public int getHour(){
        return (super.getHour()+offset)%24;
    }
}

/* Main Class */
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        int alarmHour, alarmMinute;
        System.out.println("Enter the time offset");
        Scanner in = new Scanner(System.in);
        WorldClock obj = new WorldClock(in.nextInt());
        System.out.println("Enter the Alarm Hour: ");
        alarmHour = in.nextInt();
        System.out.println("Enter the Alarm Minute: ");
        alarmMinute = in.nextInt();
        obj.setAlarm(alarmHour,alarmMinute);
        System.out.println("Current Time in your Area: " + obj.getTime());
    }
}
